enum UserType {
  client
  employee
}

type UserConnected {
  id: PositiveInt!
  firstname: String
  lastname: String
  email: EmailAddress!
  role: Role
  userType: UserType!
  token: Token
  company: String
  created_at: DateTime!
  updated_at: DateTime
}

"Récupérer des données"
type Query {
  # ------------------------------  Authentication  -------------------------------

  "Authentification de l'utilisateur"
  signin(email: EmailAddress!, password: String, userType: UserType!): UserConnected!

  # ---------------------------------  Tickets  ----------------------------------

  "Liste de tous les tickets" # pour l'admin
  getAllTickets(skip: Int, take: Int): [Ticket!]!

  "Récupération d'un ticket par son id"
  getTicketById(id: Int!): Ticket

  "Récupération de tous les tickets par client"
  getAllTicketsByClientId(id: Int!): [Ticket!]

  "Récupération de tous les tickets par employee"
  getAllTicketsByEmployeeId(employee_id: Int!): [Ticket!]

  # ---------------------------------  Messages  ----------------------------------

  "Liste de tous les messages" # pour l'admin
  getAllMessages(skip: Int, take: Int): [Message!]!

  "Récupération de tous les messages d'un ticket"
  getAllMessagesByTicketId(id: Int!): [Message!]

  # ---------------------------------  Employees  ----------------------------------

  "Liste des employee" # pour l'admin
  getAllEmployees(skip: Int, take: Int): [Employee!]!

  "Récupération de tous les employees d'un ticket"
  getAllEmployeesByTicketId(ticket_id: Int!): [Employee!]

  # ---------------------------------  Clients  ----------------------------------

  "Liste de tous les clients" # pour l'admin
  getAllClients(skip: Int, take: Int): [Client!]!
}
